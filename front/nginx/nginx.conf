
include mime.types;

server {
    listen 80;
    server_name localhost;  # Replace with your domain or IP address

    # Redirect all HTTP requests to HTTPS
    return 301 https://$host:443$request_uri;
}

server {
    listen 443 ssl;
    server_name localhost;  # Replace with your domain or IP address

    # SSL configuration
    ssl_certificate /etc/ssl/certs/localhost.crt;  # Path to your SSL certificate
    ssl_certificate_key /etc/ssl/private/localhost.key;  # Path to your SSL certificate key

    # Serve static files
    location / {
        
        root /usr/share/nginx/html/;  # Replace with the path to your static files
        index index.html;
        try_files $uri $uri.html $uri/ =404;  # Serve files or return 404 if not found
        
    }

    location /api {
        proxy_pass http://back:3000$request_uri;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_read_timeout 90;
    }


    # location /auth/login {
    #     proxy_pass http://backend:3000/auth/login;  # Change 'backend' to your backend service name or IP
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     proxy_http_version 1.1;
    #     proxy_set_header Connection "";  # Handle keep-alive connections
    # }

    # location /auth/signup {
    #     proxy_pass http://backend:3000/auth/signup;  # Change 'backend' to your backend service name or IP
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     proxy_http_version 1.1;
    #     proxy_set_header Connection "";  # Handle keep-alive connections
    # }

}
